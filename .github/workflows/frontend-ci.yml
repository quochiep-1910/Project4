name: Frontend Continuous Integration

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - 'starter/frontend/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout SCM
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Perform cache action
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci
        working-directory: starter/frontend

      - name: Run linting
        run: npm run lint
        working-directory: starter/frontend

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout SCM
        uses: actions/checkout@v3

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Perform cache action
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci
        working-directory: starter/frontend

      - name: Run Tests
        run: npm run test
        working-directory: starter/frontend

  build:
    runs-on: ubuntu-latest
    if: ${{ always() && needs.lint.result == 'success' && needs.test.result == 'success' }}
    needs: [lint, test]
    steps:
      - name: Checkout SCM
        uses: actions/checkout@v3

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Perform cache action
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci
        working-directory: starter/frontend

      - name: Build application using Docker
        run: docker build -t frontend:latest .
        working-directory: starter/frontend